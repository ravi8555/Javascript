Matrix
to print 
const printMtrix = [
  [10, 20, 30, 40, 21,],
  [11, 22, 33, 44, 32,],
  [50, 60, 70, 80, 41,],
  [55, 66, 77, 88, 51],
  [57, 67, 47, 38, 61],
  
];
topLeft = mtx[0][0] // 10
topRight = mtx[0][n-1] // 21
bottomRight = mtx[n-1][n-1] // 61
bottomLeft = mtx[n-1][0] // 55

// Row
firstRow.push(mtx[0][i]) 
firstRow2.push(mtx[n-4][i])

FourthRow.push(mtx[3][i]);
lastRow.push(mtx[n-1][i]);

/* Cols */
firstCol.push(mtx[i][0])
secondCol.push(mtx[i][1]) 
lastCol.push(mtx[i][n-1])

    
Diagonal
primeryD.push(mtx[i][i]) // where row and column indexs are same
secondaryD.push(mtx[i][n-i-1])
secondaryDfBottom.push(mtx[n-i-1][i]) //[57, 66, 70, 44, 21
primeryDfBottom.push(mtx[n-i-1][n-i-1])//61, 88, 70, 22, 10]

Question == > You are given a list of n integers, and your task is to calculate the number of distinct values in the list
Ans => in this problem I used setMap method to solve problem 

1) new Set()
2) add set value using for loop add()
3) return the size of 

Question == > Pascal Triengle
=> create matrix MAT array of aary with 1
=> let mat = [[1]];
=> creating Row using loop till n
=> push the empty array in the  matrix MAT
=> creating column go till i index, ie <= jth column
=> if i = 1 above assigned and j=0 hence [1(i) - 1 = 0] [0][1] && [0(i-1)][-1(0-0)] there for it is false first time excuite else
=> push MAT[i] mat[i-1][j]&& mat[i-1][j-1]
=> else mat[i] push 1
=> return mat

Question == > Happy Number || replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1

create function to get sum of sumOfsquare
=> declare var to store the number result  squreDigit
=> iteratre the number using while loop till get the result 0 n>=0
=> store the last digit value in currentSum var using modullo operator n%10
=> assign the result of currentSum square root
=> remove the last digit number from n by deviding 10 and round floor the value
=> return the squreDigit

The above problem statement is proceesing the reapeat number hence I am considering the set data strucute
create function happyNumber
=> to store the unique value set new Var perveSetnum
=> convert the negative number to positive using abs method to avoide the negative number entry, corner case
=> run the loop till become 1, hence I used the while lopp n != 1
=> In the condition if the number is not 1 then add to perveSetnum using .add() method
=> assign n to sumOfsquare(n) to check the sum of square root 
=> check if this number added before or duplicate number n to using .has(n) method.
=> return false in condition if not happy number its calculation same number
=> retutn true outside loop

Question == > Given a column title as it appears in an Excel sheet, return its corresponding column number.

Break the problem, each number has own unocorn[ASCII  code] key value which is known as charCodeAt. A stand for 65. if we get A =1, means 65- 1 = 64 the is the value place for 0th index. A is 1, B is 2.... and Z is 26

=> assign the var ans to store the result
=> Here we are Iterating over values directly hence use for of loop with ch var // (const ch of n)
=> In the loop set map = integer ch charcodeAt - 64
=> update the ans as *26 (for handling multi-letter column titles. so 1 to 26 is 1 column, to jump on another column we have to multiply by 26);
=> add value to the map +=;
=> return ans

Question == > MathProfessor, The names of the students in his class are given as an array of strings. Another string, B, is given, consisting of lowercase English letters. For each name in the array of strings, he wants to calculate the number of unique letters from string B that appear in that name.

/*
Above problem statement we have to count the unique charector which is present in B and A is the name of Students, Match B with A and set it on visited

1) we have to create match function to correctly handles counting unique common characters.
2) we have to ceate The mathProfessor function for correctly iterates over the names and stores the results.
*/

1 match function with taking 2 parameter A B
=> create a set for visited charector using set
=> run the loop over all ch from A (cnt ch of A)
=> In the loop we have to add the visited charector using add method
=> create the count var with 0 to store the count
=> check the another string B using urn loop over all ch in B
=> in the loop check if the visited is there (using has(ch) method then add to the count ++
=> delete the the duplicated from visited using delete method

2) create math profeesor function using n, a, B parameter;
=> create the result empty array withing function to store the result
=> iterate the all indices with length of array n(let index =0; index<n;index++)
=> in loop hold the value of current index create the var and assign the index with A=a[index]
=> crete the count var with  match function
=> store in the result array with the same index result[index] = count
=> return result







